package tb;

import com.android.alibaba.ip.runtime.IpChange;
import com.taobao.weex.common.Constants;
import java.util.HashMap;

/* compiled from: Taobao */
/* loaded from: /Users/corson/Downloads/taobao_decompiled/build/apk/classes9.dex */
public class cdw {
    public static volatile transient /* synthetic */ IpChange $ipChange = null;
    public static final int T_ADJUST_VIEW_BOUNDS = 10202;
    public static final int T_ALIGN = 10021;
    public static final int T_ALPHA = 10020;
    public static final int T_BACKGROUND_COLOR = 10004;
    public static final int T_BACKGROUND_IMAGE = 10005;
    public static final int T_BACKGROUND_SELECTOR = 10003;
    public static final int T_BOLD_FONT_SIZE = 10132;
    public static final int T_BORDER_COLOR = 10015;
    public static final int T_BORDER_NORMAL_COLOR = 10016;
    public static final int T_BORDER_NORMAL_WIDTH = 10013;
    public static final int T_BORDER_SELECTOR = 10017;
    public static final int T_BORDER_WIDTH = 10014;
    public static final int T_BUTTON_BASE = 10301;
    public static final int T_CACHE_COLOR_HINT = 10452;
    public static final int T_CAPITALIZE = 10353;
    public static final int T_CLICKABLE = 10302;
    public static final int T_CONTENT_DESCRIPTION = 10209;
    public static final int T_CORNER_RADIUS = 10018;
    public static final int T_DIVIDER = 10454;
    public static final int T_DIVIDER_HEIGHT = 10453;
    public static final int T_DRAWABLE_BOTTOM = 10115;
    public static final int T_DRAWABLE_LEFT = 10116;
    public static final int T_DRAWABLE_RIGHT = 10117;
    public static final int T_DRAWABLE_TOP = 10114;
    public static final int T_EDITABLE = 10354;
    public static final int T_EDITTEXT_BASE = 10351;
    public static final int T_EMS = 10131;
    public static final int T_FADE_SCROLL_BARS = 10460;
    public static final int T_FADING_EDGE = 10455;
    public static final int T_FAMILY_NAME = 10109;
    public static final int T_FAST_SCROLL_ENABLED = 10457;
    public static final int T_FONT = 10113;
    public static final int T_FONT_COLOR_SELECTOR = 10106;
    public static final int T_FONT_SIZE = 10111;
    public static final int T_FONT_WEIGHT = 10108;
    public static final int T_GRADIENT_BACKGROUND_COLOR = 10019;
    public static final int T_HEIGHT = 10008;
    public static final int T_HINTTEXT = 10120;
    public static final int T_HINTTEXT_COLOR = 10121;
    public static final int T_ICONFONT_COLOR = 10105;
    public static final int T_ICONFONT_FAMILY_NAME = 10110;
    public static final int T_ICONFONT_SIZE = 10112;
    public static final int T_ICON_FONT_CODE = 10103;
    public static final int T_IMAGE = 10207;
    public static final int T_IMAGEVIEW_BASE = 10201;
    public static final int T_IMAGE_SOURCE = 10206;
    public static final int T_LAYOUT_ALIGN_PARENT_BOTTOM = 10406;
    public static final int T_LAYOUT_ALIGN_PARENT_LEFT = 10408;
    public static final int T_LAYOUT_ALIGN_PARENT_RIGHT = 10407;
    public static final int T_LAYOUT_ALIGN_PARENT_TOP = 10405;
    public static final int T_LAYOUT_CENTER_HORIZONTAL = 10402;
    public static final int T_LAYOUT_CENTER_IN_PARENT = 10404;
    public static final int T_LAYOUT_CENTER_VERTICAL = 10403;
    public static final int T_LAYOUT_GRAVITY = 10353;
    public static final int T_LAYOUT_HEIGHT = 10009;
    public static final int T_LAYOUT_WEIGHT = 10352;
    public static final int T_LAYOUT_WIDTH = 10007;
    public static final int T_LINEARLAYOUT_BASE = 10351;
    public static final int T_LINES = 10122;
    public static final int T_LINE_SPACING_EXTRA = 10126;
    public static final int T_LINE_SPACING_MULTIPLIER = 10127;
    public static final int T_LINE_TYPE = 10129;
    public static final int T_LISTVIEW_BASE = 10451;
    public static final int T_LIST_SELECTOR = 10462;
    public static final int T_MARGIN = 10011;
    public static final int T_MARGIN_SPACE = 10012;
    public static final int T_MAX_HEIGHT = 10203;
    public static final int T_MAX_LINES = 10124;
    public static final int T_MAX_WIDTH = 10204;
    public static final int T_MIN_HEIGHT = 10210;
    public static final int T_MIN_LINES = 10125;
    public static final int T_MIN_WIDTH = 10211;
    public static final int T_NUMBER_OF_LINES = 10123;
    public static final int T_ORIENTATION = 10354;
    public static final int T_PADDING = 10010;
    public static final int T_PASSWORD = 10352;
    public static final int T_RELATIVELAYOUT_BASE = 10401;
    public static final int T_SCALE_TYPE = 10205;
    public static final int T_SCROLLING_CACHE = 10461;
    public static final int T_SCROLL_BARS = 10456;
    public static final int T_SCROLL_BAR_STYLE = 10458;
    public static final int T_SHADOW = 10130;
    public static final int T_SINGLE_LINE = 10128;
    public static final int T_STACK_FROM_BOTTOM = 10459;
    public static final int T_TEXT = 10102;
    public static final int T_TEXTVIEW_BASE = 10101;
    public static final int T_TEXT_ALIGNMENT = 10119;
    public static final int T_TEXT_COLOR = 10104;
    public static final int T_TINT = 10208;
    public static final int T_TITLE_COLOR_SELECTOR = 10107;
    public static final int T_TRUNCATE_MODE = 10118;
    public static final int T_UNKNOWN = 0;
    public static final int T_VIEW_BASE = 10001;
    public static final int T_VISIBLE = 10002;
    public static final int T_WIDTH = 10006;
    public static final HashMap<String, Integer> attributes;

    public static int a(String str) {
        IpChange ipChange = $ipChange;
        if (ipChange instanceof IpChange) {
            return ((Number) ipChange.ipc$dispatch("2295a0d7", new Object[]{str})).intValue();
        }
        Integer num = attributes.get(str);
        if (num != null) {
            return num.intValue();
        }
        return 0;
    }

    static {
        t2o.a(1039138819);
        HashMap<String, Integer> hashMap = new HashMap<>();
        attributes = hashMap;
        hashMap.put("visible", 10002);
        hashMap.put("backgroundSelector", 10003);
        hashMap.put("backgroundColor", 10004);
        hashMap.put("backgroundImage", 10005);
        hashMap.put("width", 10006);
        hashMap.put("layoutWidth", 10007);
        hashMap.put("height", 10008);
        hashMap.put("layoutHeight", 10009);
        hashMap.put("padding", 10010);
        hashMap.put("margin", 10011);
        hashMap.put("marginSpace", 10012);
        hashMap.put("borderNormalWidth", 10013);
        hashMap.put("borderWidth", Integer.valueOf((int) T_BORDER_WIDTH));
        hashMap.put("borderColor", 10015);
        hashMap.put("borderNormalColor", 10016);
        hashMap.put("borderSelector", Integer.valueOf((int) T_BORDER_SELECTOR));
        hashMap.put(hij.KEY_CORNER_RADIUS, Integer.valueOf((int) T_CORNER_RADIUS));
        hashMap.put("gradientViewBackgroundColor", Integer.valueOf((int) T_GRADIENT_BACKGROUND_COLOR));
        hashMap.put("alpha", Integer.valueOf((int) T_ALPHA));
        hashMap.put(Constants.Name.ALIGN, 10021);
        hashMap.put("text", 10102);
        hashMap.put("iconFontCode", 10103);
        hashMap.put("textColor", 10104);
        hashMap.put("iconFontColor", 10105);
        hashMap.put("fontColorSelector", Integer.valueOf((int) T_FONT_COLOR_SELECTOR));
        hashMap.put("titleColorSelector", Integer.valueOf((int) T_TITLE_COLOR_SELECTOR));
        hashMap.put("fontWeight", Integer.valueOf((int) T_FONT_WEIGHT));
        hashMap.put("familyName", Integer.valueOf((int) T_FAMILY_NAME));
        hashMap.put("iconFontFamilyName", 10110);
        hashMap.put("fontSize", Integer.valueOf((int) T_FONT_SIZE));
        hashMap.put("iconFontSize", Integer.valueOf((int) T_ICONFONT_SIZE));
        hashMap.put("font", Integer.valueOf((int) T_FONT));
        hashMap.put("drawableTop", Integer.valueOf((int) T_DRAWABLE_TOP));
        hashMap.put("drawableBottom", Integer.valueOf((int) T_DRAWABLE_BOTTOM));
        hashMap.put("drawableLeft", Integer.valueOf((int) T_DRAWABLE_LEFT));
        hashMap.put("drawableRight", Integer.valueOf((int) T_DRAWABLE_RIGHT));
        hashMap.put("truncateMode", Integer.valueOf((int) T_TRUNCATE_MODE));
        hashMap.put("textAlignment", 10119);
        hashMap.put("hintText", Integer.valueOf((int) T_HINTTEXT));
        hashMap.put("hintTextColor", Integer.valueOf((int) T_HINTTEXT_COLOR));
        hashMap.put(Constants.Name.LINES, Integer.valueOf((int) T_LINES));
        hashMap.put("numberOfLines", Integer.valueOf((int) T_NUMBER_OF_LINES));
        hashMap.put("maxLines", Integer.valueOf((int) T_MAX_LINES));
        hashMap.put("minLines", Integer.valueOf((int) T_MIN_LINES));
        hashMap.put("lineSpacingExtra", Integer.valueOf((int) T_LINE_SPACING_EXTRA));
        hashMap.put("lineSpacingMultiplier", Integer.valueOf((int) T_LINE_SPACING_MULTIPLIER));
        hashMap.put("singleLine", Integer.valueOf((int) T_SINGLE_LINE));
        hashMap.put("lineType", Integer.valueOf((int) T_LINE_TYPE));
        hashMap.put("shadow", Integer.valueOf((int) T_SHADOW));
        hashMap.put("ems", Integer.valueOf((int) T_EMS));
        hashMap.put("adjustViewBounds", Integer.valueOf((int) T_ADJUST_VIEW_BOUNDS));
        hashMap.put("maxHeight", Integer.valueOf((int) T_MAX_HEIGHT));
        hashMap.put("maxWidth", Integer.valueOf((int) T_MAX_WIDTH));
        hashMap.put("minHeight", Integer.valueOf((int) T_MIN_HEIGHT));
        hashMap.put("minWidth", Integer.valueOf((int) T_MIN_WIDTH));
        hashMap.put("scaleType", Integer.valueOf((int) T_SCALE_TYPE));
        hashMap.put("imageSource", Integer.valueOf((int) T_IMAGE_SOURCE));
        hashMap.put("image", Integer.valueOf((int) T_IMAGE));
        hashMap.put("tint", Integer.valueOf((int) T_TINT));
        hashMap.put("contentDescription", Integer.valueOf((int) T_CONTENT_DESCRIPTION));
        hashMap.put("clickable", Integer.valueOf((int) T_CLICKABLE));
        hashMap.put("password", 10352);
        hashMap.put("capitalize", 10353);
        hashMap.put("editable", 10354);
        hashMap.put("layoutWeight", 10352);
        hashMap.put("layoutGravity", 10353);
        hashMap.put("orientation", 10354);
        hashMap.put("layoutCenterHorizontal", Integer.valueOf((int) T_LAYOUT_CENTER_HORIZONTAL));
        hashMap.put("layoutCenterVertical", Integer.valueOf((int) T_LAYOUT_CENTER_VERTICAL));
        hashMap.put("layoutCenterInParent", Integer.valueOf((int) T_LAYOUT_CENTER_IN_PARENT));
        hashMap.put("layoutAlignParentTop", Integer.valueOf((int) T_LAYOUT_ALIGN_PARENT_TOP));
        hashMap.put("layoutAlignParentBottom", Integer.valueOf((int) T_LAYOUT_ALIGN_PARENT_BOTTOM));
        hashMap.put("layoutAlignParentRight", Integer.valueOf((int) T_LAYOUT_ALIGN_PARENT_RIGHT));
        hashMap.put("layoutAlignParentLeft", Integer.valueOf((int) T_LAYOUT_ALIGN_PARENT_LEFT));
        hashMap.put("cacheColorHint", Integer.valueOf((int) T_CACHE_COLOR_HINT));
        hashMap.put("dividerHeight", Integer.valueOf((int) T_DIVIDER_HEIGHT));
        hashMap.put("divider", Integer.valueOf((int) T_DIVIDER));
        hashMap.put("fadingEdge", Integer.valueOf((int) T_FADING_EDGE));
        hashMap.put("scrollbars", Integer.valueOf((int) T_SCROLL_BARS));
        hashMap.put("fastScrollEnabled", Integer.valueOf((int) T_FAST_SCROLL_ENABLED));
        hashMap.put("scrollbarStyle", Integer.valueOf((int) T_SCROLL_BAR_STYLE));
        hashMap.put("stackFromBottom", Integer.valueOf((int) T_STACK_FROM_BOTTOM));
        hashMap.put("fadeScrollbars", Integer.valueOf((int) T_FADE_SCROLL_BARS));
        hashMap.put("scrollingCache", Integer.valueOf((int) T_SCROLLING_CACHE));
        hashMap.put("listSelector", Integer.valueOf((int) T_LIST_SELECTOR));
    }
}
